import numpy as np
import simpleaudio as sa
from scipy import signal
from math import floor
from time import sleep
from singlewaveform import compileFrequencies, graphSig
longth = 60 / 145
varlength = longth
def playTone(dat, sample_rate = 44100):
    dat = dat * (2**15 - 1) / np.max(np.abs(dat))
    # Convert to i--bit data
    dat = dat.astype(np.int16)
    play_obj = sa.play_buffer(dat, 1, 2, sample_rate)

    # Wait for playback to finish before exiting
    play_obj.wait_done()

def gentone(frequency, length, sample_rate = 44100):
    t = np.linspace(0, length, floor(length * sample_rate), False)
    #note = signal.sawtooth(frequency * t, 0.5)
    # Generate a 440 Hz sine wave
    note = abs(np.sin(frequency * t * 2 * np.pi))# * (2 ** (-((t / (length * 20)**2)))) * np.arctan(t / 4000))
    return note

def convertCopyToEverything(x):
    strings = x.split("\n")
    strings = [i.split("|")[1] for i in strings]
    frames = [[strings[j][i] for j in range(len(strings))] for i in range(len(strings[0]))]
    return frames

def charToNote(c,o=0):
    dic  = {"a":110, "b":246.984, "c":65.41,"d":146.83,"e":82.41,"E":329.63,"f":87.31,"g":196.00}
    return dic[c] * (2**o)

def fretboard(k):
    if len(k) == 2:
        i,j = k
        #print(k)
    else:
        i,j,l = k
        return charToNote(i) * (2 ** (j/12)), l

    return charToNote(i) * (2 ** (j/12))

def frametoDat(frame):
    dic = ["E","b","g","d","a","e"]
    fl = []
    #length = 0.5
    for i in range(6):
        if frame[i] != "-" and frame[i] != "~" and frame[i] != "h":
            if frame[i] == "p":
                frame[i] = 10
            if frame[i] == "o":
                frame[i] = 11
            if frame[i] == "i":
                frame[i] = 12



            freq = fretboard((dic[i], int(frame[i])))
            fl.append(freq)
    return fl


def multiTone(notes, length = 30 / 145, sample_rate = 44100):
    t = np.zeros(floor(length*sample_rate))
    for i in notes:
        t += gentone(i, length, sample_rate)
    return t

def hotChord(song):
    chordDict = {"a":[0,1,2,2,0,-1],"D":[2,3,2,-1,-1,-1],"C":[0,1,0,2,3,-1], "d":[1,3,2,0,-1,-1]}
    for i in range(len(songs)):  #yeah yeah yeah range len is bad form for this but wait and see
    #i is measure
        strings = songs[i].split("\n")
        for j in range(len(strings)): #individual string
            #newsong = ["","","","","",""]
            strings[j] += "\n"
            for k in range(len(strings[j])-3): #point in time
                k+=2
                chord = strings[j][k]
                if chord in chordDict:
                    s = chordDict[chord]

                    for sn in range(len(s)):
                        modstring = strings[sn]
                        modstring = [l for l in modstring]
                        if int(s[sn]) == -1:
                            modstring[k] = "-"
                        else:
                            modstring[k] = str(s[sn])
                            #print(k)
                        strings[sn] = "".join(modstring)
        songs[i] = "".join(strings)[:-1]
                        #print(newsong)
                        #quit()
    #songs = newsong
    return songs

songs = ["""e|-----------|
B|-----------|
G|-----------|
D|----9---9--|
A|-----------|
E|--0---0----|""", """e|--------------------------------------------------------------------|
B|--------------------------------------------------------------------|
G|--------------------------------------------------------------------|
D|----9---9---9---9---9---9---9---9---9---9---9---9---9---9---9---9---|
A|------------------6---6---6---6---7---7---7---7---0---0---0---0-----|
E|--0---0---0---0-----------------------------------------------------|""","""e|--------------------------------------------------------------------|
B|--------------------------------------------------------------------|
G|--------------------------------------------------------------------|
D|----6---6---6---6---6---6---6---6---6---6---6---6---6---6---6---6---|
A|--4---4---0---0---4---4---0---0---4---4---0---0---4---4---0---0-----|
E|--------------------------------------------------------------------|""", """e|-----------|
B|-----------|
G|-----------|
D|----9---9--|
A|-----------|
E|--0---0----|""", """e|--------------------------------------------------------------------|
B|--------------------------------------------------------------------|
G|--------------------------------------------------------------------|
D|----9---9---9---9---9---9---9---9---9---9---9---9---9---9---9---9---|
A|------------------6---6---6---6---7---7---7---7---0---0---0---0-----|
E|--0---0---0---0-----------------------------------------------------|""", """e|--------------------------------------------------------------------|
B|--------------------------------------------------------------------|
G|--------------------------------------------------------------------|
D|----6---6---6---6---6---6---6---6---6---6---6---6---6---6---6---6---|
A|--4---4---0---0---4---4---0---0---4---4---0---0---4---4---0---0-----|
E|--------------------------------------------------------------------|""", """e|---------------|
B|------7-----9--|
G|---9-----9-----|
D|---------------|
A|---------------|
E|---------------|""", """e|------------------------|
B|------------------------|
G|------------------------|
D|---6~---6~---6~---6~----|
A|---4~---0~---4~---0~----|
E|------------------------|""", """e|--------------------------------------------------------------------|
B|--------------------------------------------------------------------|
G|--------------------------------------------------------------------|
D|----6---6---6---6---6---6---6---6---6---6---6---6---6---6---6---6---|
A|--4---4---0---0---4---4---0---0---4---4---0---0---4---4---0---0-----|
E|--------------------------------------------------------------------|""", """e|----------------------------------------------------------------------|
B|----------------------------------------------------------------------|
G|----------------------------------------------------------------------|
D|--2-2-2-2-2-2-2-2--6-6-6-6-6-6-6-6--7-7-7-7-7-7-7-7--4-4-4-4-4-4-4-4--|
A|--2-2-2-2-2-2-2-2--6-6-6-6-6-6-6-6--7-7-7-7-7-7-7-7--4-4-4-4-4-4-4-4--|
E|--0-0-0-0-0-0-0-0--4-4-4-4-4-4-4-4--5-5-5-5-5-5-5-5--2-2-2-2-2-2-2-2--|""", """e|----------------------------------------------------------|
B|----------------------------------------------------------|
G|----------------------------------------------------------|
D|--2-2-2-2-2-2-2-2--6-6-6-6-6-6-6-6--7-7-7-7-7-7-7-7--4~---|
A|--2-2-2-2-2-2-2-2--6-6-6-6-6-6-6-6--7-7-7-7-7-7-7-7--4~---|
E|--0-0-0-0-0-0-0-0--4-4-4-4-4-4-4-4--5-5-5-5-5-5-5-5--2~---|""", """e|-----------7--9--p---9-p--9--7-----------7--p---9---p---o---i----|
B|-----7--9--------------------------7--9--------------------------|
G|--9------------------------------9-------------------------------|
D|-----------------------------------------------------------------|
A|-----------------------------------------------------------------|
E|-----------------------------------------------------------------|""", """e|-----------7--9--p---9-p--9--7-----------7--p---9---p---o---i----|
B|-----7--9--------------------------7--9--------------------------|
G|--9------------------------------9-------------------------------|
D|-----------------------------------------------------------------|
A|-----------------------------------------------------------------|
E|-----------------------------------------------------------------|""", """e|-------------------------------------|
B|-----7---7---7---7---9---9---9---9---|
G|---9---9---9---9---9---9---9---9-----|
D|-------------------------------------|
A|-------------------------------------|
E|-------------------------------------|""", """e|----------------------------------------------------------------------|
B|----------------------------------------------------------------------|
G|----------------------------------------------------------------------|
D|--2-2-2-2-2-2-2-2--6-6-6-6-6-6-6-6--7-7-7-7-7-7-7-7--4-4-4-4-4-4-4-4--|
A|--2-2-2-2-2-2-2-2--6-6-6-6-6-6-6-6--7-7-7-7-7-7-7-7--4-4-4-4-4-4-4-4--|
E|--0-0-0-0-0-0-0-0--4-4-4-4-4-4-4-4--5-5-5-5-5-5-5-5--2-2-2-2-2-2-2-2--|""", """e|-----------7--9--p---9-p--9--7-----------7--p---9---p---o---i----|
B|-----7--9--------------------------7--9--------------------------|
G|--9------------------------------9-------------------------------|
D|-----------------------------------------------------------------|
A|-----------------------------------------------------------------|
E|-----------------------------------------------------------------|""", """e|--------------------------------------------------------------|
B|----------------------------------------------------------9---|
G|--------------6--8--6--8--6--------------------8--6--6h8------|
D|--------6--9-----------------9---------~-6--9-----------------|
A|--7--9-----------------------------7--9-----------------------|
E|-----------------------------------------------------------~--|""", """e|----------------------------------------------------------------------|
B|----------------------------------------------------------------------|
G|-----------------------------------6-6-6-6-6-6-6-6--------------------|
D|--2-2-2-2-2-2-2-2-2-2-2-2-2-2-2-2--6-6-6-6-6-6-6-6--7-7-7-7-7-7-7-7---|
A|--2-2-2-2-2-2-2-2-2-2-2-2-2-2-2-2--4-4-4-4-4-4-4-4--7-7-7-7-7-7-7-7---|
E|--0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-------------------5-5-5-5-5-5-5-5---|""", """e|---------------------------------------------------------------------|
B|---------------------------------------------------------------------|
G|---------------------------------------------------------------------|
D|----9---9---9---9---9---9---9---9---9---9---9---9---9---9---9---9--9-|
A|----------------------------------6---6---6---6---7---7---7---7----0-|
E|--0---0---0---0---0---0---0---0------------------------------------0-|"""]




#songs = [ """e|-----------7--9--p---9-p-9--7-----------7--p---9---p---o---i----|
#B|-----7--9-------------------------7--9--------------------------|
#G|--9-----------------------------9-------------------------------|
#D|----------------------------------------------------------------|
#A|----------------------------------------------------------------|
#E|----------------------------------------------------------------|""", """e|-----------7--9--p---9-p--9--7-----------7--p---9---p---o---i----|
#B|-----7--9--------------------------7--9--------------------------|
#G|--9------------------------------9-------------------------------|
#D|-----------------------------------------------------------------|
#A|-----------------------------------------------------------------|
#E|-----------------------------------------------------------------|"""]



##songs = ["""e|-------------------------------------|
##B|--9-9-9-7-7-7-------------------------|
##G|--9-9-9-9-9-9-8-8-8-9-9-9-8-----------|
##D|--------------9-9-9-9-9-9-9-----------|
##A|--------------------------------------|
##E|--------------------------------------|"""]


songs = [
"""e|-8---8--7--6-5---------------------------8---8-------|
B|-8-----------6---------------------------9------9----|
G|-9---------------------7--9--p--p--p--i--p--------p--|
D|-p----------------7--p-------p-----------------------|
A|-----------------------------i-----------------------|
E|-----------------------------------------------------|""","""e|-8---8--7--6-5---------------------------8-|
B|-8-----------6---------------------------9-|
G|-9---------------------7--9--p--p--p--i--p-|
D|-p----------------7--p-------p-------------|
A|-----------------------------i-------------|
E|-------------------------------------------|"""]
#songs = [songs[0],songs[0]]

songs = hotChord(songs)
#print(songs[0])
#quit()

#print(songs)
#quit()











thresh = 0.001 * 2**15-1
dat = np.zeros((10))
oldframe = ["-","-","-","-","-","-"]
ListOfListOfFrequencies =[]
ListOfTimesteps = []
sigstep = 0


def timesignature(t):
    #long long long long long long short short short short
    #if (t % 10) > 5:
        #print(0)
        #return 0.41 / 2
    #print(1)
    return 0.125

for song in songs:
    frames = convertCopyToEverything(song)
    print(song)
    oldframe
    for frame in frames:
        t = 0
        for i in frame:
            if i != "-":
                t = 1
        if t == 0:
            pass
            #frame = oldframe
        new = frametoDat(frame)

        ListOfListOfFrequencies.append(new)

        ListOfTimesteps.append(timesignature(sigstep))

        sigstep  += 1

        #oldframe = frame

dat = compileFrequencies(ListOfListOfFrequencies, ListOfTimesteps)
#graphSig(dat[44100*30:44100*30+11025])
playTone(dat)
